(*
  This program should be rejected because there is a causality cycle.

  The value of x is needed to determine whether up(x -. 1.0) is present, which
  is needed to decide whether x is reset, by the signal nxy, to a new value.
 *)

let hybrid j () = (x,y) where
  rec der x = 1.0 init -1.0 reset nxy(nx, _) -> nx
  and der y = 1.0 init -2.0 reset nxy(_, ny) -> ny
  and present
      | up(x -. 1.0) -> do emit nxy = (-1.0, -2.0) done

