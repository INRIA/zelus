let node f (x,y,w) = t,m where
  rec match x fby (t = 0)  with
      | true ->
	  let r = last m0 in
	  do t = 1 and m = t done
      | false ->
	  do t = 1 and m = t + w done
  and init m0 = y and m0 = m + 1

let node g(x, y) = x + 1

let node h (x,y,w) = t,m where
  rec present
      | (x fby (t = 0)) ->
	  let r = last m0 in
	  do t = 1 and m = t done
      | false ->
	  do t = 1 and m = t + w done
      else do t = 0 and m = 0 done
  and init m0 = y and m0 = m + 1
