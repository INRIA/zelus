
let hybrid f y = w where
  rec x = present y -> (let rec o = true -> pre not o in o) init true
  and init w = 0.0
  and match x with
      | true  -> do der w =  1.0 done
      | false -> do der w = -1.0 done

let hybrid main () = () where
  rec p = period (0.2 | 1.0)
  and 
  o = f p

