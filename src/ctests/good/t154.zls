let atomic node infer particles f x =
if particles = 0 then run f x
else run f x

let const x = x
let sample x = x
let gaussian (x, y) = 0.
let mv_gaussian (x, y) = 0.
let vec_get (x, y) = 0.
let observe(x,y) = ()
let node lqr a b x = 0.
let mean x = 0.

let a = 0.
let a_approx = 0.
let b = 0.
let x_init = 0.
let noise = 0.

let zeros x y = 0.

let atomic node env (b, u) = (xt, acc, gps) where
rec (xt, acc) = if u > 0. then (1.,2.) else (2.,1.)
and present (b) -> do emit gps = 1. done


let node kalman (xo, u, acc, gps) = x where
rec mu = const xo -> (const a *. pre x) +. (const b *. const u)
and x = sample (mv_gaussian (mu, noise))
and () = observe (gaussian (vec_get (x, 2), 0.1), acc)
and () = present gps(pos) ->
observe (gaussian (vec_get (x, 0), 0.01), pos)
else ()


let node robot particles (xo, uo, acc, gps) = (u, x_dist) where
rec x_dist = infer particles kalman (xo, u, acc, gps)
and u = uo -> pre (lqr a_approx b (mean x_dist))

(** Main *)

let atomic node main particles () = () where
rec t = 1 fby t + 1
(* Robot *)
and call_gps = true -> (t mod 50 = 0)
and xt, acc, gps = env (call_gps, cmd)
and cmd, x_dist = robot particles (x_init, zeros 3 1, acc, gps)

