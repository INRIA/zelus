let node retard(x) = 0 fby x
    

let node diff(x) = x -. (x fby x)

let node derivative(h, x) = (x -. x fby x) /. h


let node euler_forward(h, x0, x') = x where
  rec
      x = x0 -> pre(x +. x' *. h)

let node euler_backward(h, x0, x') = x where
  rec
      x = x0 -> pre(x) +. x' *. h

let node wrong(h, x0, x) = o where rec o = euler_forward(h, x0, o)
    
  

	  
