let f x = let y = x + 1 in y + 2

let g x = inline f (x + x + 1)


let node main2 () =
  let rec nat = 0 fby nat + 2 in
  g nat

    
let h x =
  let z = x + inline g (x + 2) in
  if x = 0 then inline f (z + 3) else inline g (x - 1)
    
let l x returns o
  automaton
  | S1 -> do o = inline f (x + 1) until (o = 2) then S2
  | S2 -> do reset o = inline f (x + 2) every inline f (x + 3) done
  end

let node main1 () =
  let static v = 1 + 2 in
  let rec nat = 0 fby nat + 1 in
  f (v + nat)


let node main3 () =
  let rec nat = 0 fby nat + 3 in
      inline h nat


