 (** Bouncing ball. *)

(* [ground x] returns the position in [y] *)
let ground x = Flatworld.ground(x)
let ground_abs x = Flatworld.ground_abs(x)

let x_0 = 5.0
let y_0 = 10.0
let g = 9.81
let loose = 0.8
    
(* The bouncing ball *)
let hybrid ball(x, y_0) = (y, y_v, z) where
  rec
      der y = y_v init y_0
  and 
      der y_v = -. g init 0.0 reset z -> (-. loose *. last y_v)
  and z = up(ground(x) -. y)

(*
let hybrid gen(z) = (x0, v0) where
  rec init x0 = Random.float 4.0
  and init v0 = Random.float 4.0
  and present z ->
	do next x0 = Random.float 4.0 and v0 = Random.float 4.0 done
 *)
      
(* Main entry point *)
let hybrid main () =
  let rec (y, _, z) = ball(x_0, y_0)
  (* and (x_0, _) = gen(z) *) in
  present (period (0.04)) | z -> Showball.show x_0 (y fby y) x_0 y;
  ()

