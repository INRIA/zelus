(* ** Parameters ** *)

(* neutral positions of the two masses *)
let p1 = 1.25
let p2 = 1.75

(* initial positions of the two masses: y1_i < y2_i *)
let x1_i = 0.0
let x2_i = 3.0

(* spring constants *)
(* let k1 = 4.0 (* exhibits problem *) *)
let k1 = 1.0
let k2 = 2.5 (* 2.0 *)

(* masses *)
let m1 = 1.5
let m2 = 1.0

(* stickyness *)
let stickiness_max = 10.0
let tau = 0.5

(* ** Model ** *)

let hybrid sticky () =
  ((x1, v1), (x2, v2), pull, stickiness_out, total) where
  rec der x1 = v1 init x1_i
  and der x2 = v2 init x2_i
  and init v1 = 0.0
  and init v2 = 0.0
  and total = 0.5 *. m1 *. v1 *. v1 +. 0.5 *. m2 *. v2 *. v2 +.
              0.5 *. k1 *. (x1 -. p1) *. (x1 -. p1) +.
              0.5 *. k2 *. (x2 -. p2) *. (x2 -. p2) 
  and automaton
      | Apart ->
          local mediant in
          do  der v1 = k1 *. (p1 -. x1) /. m1
          and der v2 = k2 *. (p2 -. x2) /. m2
          and mediant = (v1 *. m1 +. v2 *. m2) /. (m1 +. m2)
          and pull = 0.0
          and stickiness_out = 0.0
          until up (x1 -. x2) then 
             do next v1 = mediant
             and next v2 = mediant in Together
      | Together ->
          local y_dot_dot, stickiness in
          do  pull = 
               abs_float (-. last x1 *. (k1 +. k2) +. (k2 *. p2 -. k1 *. p1))
          and y_dot_dot = 
               (k1 *. p1 +. k2  *. p2 -. (k1 +. k2) *. last x1) /. (m1 +. m2)
          and der v1 = y_dot_dot
          and der v2 = y_dot_dot
          and der stickiness = -. stickiness /. tau init stickiness_max
          and stickiness_out = stickiness
          until (init) on (pull >= stickiness) then Apart
           else up (pull -. stickiness) then Apart

(* ** plotting ** *)

open Scope

let node plot (t, (y1, y1_dot), (y2, y2_dot), pull_force, stickiness, total) =
  let s1 = scope2 (0.0, 3.0, ("p1", linear, y1), ("p2", linear, y2)) in
  let s2 = scope2 (-1.5, 1.5, ("v1", linear, y1_dot), ("v2", linear, y2_dot)) in
  let s3 = scope2 (0.0, stickiness_max, ("Pulling force", linear, pull_force),
                                        ("Stickiness", linear, stickiness)) in
  let s4 = scope (0.0, 3.0, ("Total Energy", linear, total)) in
  window4 ("sticky springs", 30.0, t, s1, s2, s3, s4)

(* ** main ** *)

let hybrid main () = 
  let der t = 1.0 init 0.0 in
  let ((y1, y1_dot), (y2, y2_dot), pull_force, stickiness, total) = sticky () in
  present
     (period (0.10)) ->
       plot (t, (y1, y1_dot), (y2, y2_dot), pull_force, stickiness, total);
  ()
