(* Author: Fran√ßois Bidet *)

open Constants;;

let max(a, b) = max a b

let hybrid vehicle(x_init, x_lead, x_rear, x_merg) = x_int where
    rec x_int = Vehicle.vehicle(x_init, x_int_ref)
    and (xr, yr, phi, vx, vy, omega) = x_int
    and x_int_ref = (rxr, ryr, rphi, rvx, rvy, romega)
    and (lead_xr, lead_yr, lead_phi, lead_vx, lead_vy, lead_omega) = x_lead   (* leader vehicle *)
    and (rear_xr, rear_yr, rear_phi, rear_vx, rear_vy, rear_omega) = x_rear   (* rear vehicle *)
    and (merg_xr, merg_yr, merg_phi, merg_vx, merg_vy, merg_omega) = x_merg   (* merging vehicle *)
    and rvx = lead_vx
    and rxr = max((xr -. t_gap *. vx +. max(rear_xr +. t_gap *. rear_vx, merg_xr +. t_gap *. merg_vx)) /. 2., lead_xr -. t_gap *. lead_vx) (* changed from benchmark description article *)
    and ryr = 3.5
    and rphi = 0.
    and rvy = 0.
    and romega = 0.