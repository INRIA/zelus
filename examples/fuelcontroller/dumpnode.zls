
open Fuelc_engine
open Fuelc_subsys
open Fuelc_common
open Library

let hybrid simulation (sw_engspeed, sw_throt, sw_speed, sw_ego, sw_map)
  = (t, air_fuel_ratio, speed, pressure, ego, throttle, fuel_rate)
  where
  rec der t = 1.0 init 0.0

  and throttle_angle = zigzag (4.0, 5.0) +. 15.0
  and throttle = if sw_throt    then throttle_angle else   0.0
  and engspeed = if sw_engspeed then 300.0          else 700.0
  and speed    = if sw_speed    then engspeed  else   0.0
  and ego      = if sw_ego      then o2_out    else  12.0
  and pressure = if sw_map      then map       else   0.0

  and sensors  = {throttle=throttle; speed=speed; ego=ego; pressure=pressure}
  and init fuel_rate = 1.209028005600
  and present (period (0.01)) ->
    do
      fuel_rate = fuel_rate_control(sensors)
    done

  and (o2_out, map, air_fuel_ratio) =
        engine_gas_dynamics (engspeed, throttle_angle, last fuel_rate)

open Dump

let node dump(t, scenario, air_fuel_ratio, speed, map, ego, throttle, fuel) =
  let
  rec s1 = scope5(0., 0.,   ("air_fuel_ratio", linear, air_fuel_ratio),
                            ("speed"         , linear, speed),
                            ("map"           , linear, map),
                            ("ego"           , linear, ego),
                            ("throttle"      , linear, throttle))
  and s2 = scope (0., 0.,   ("fuel"          , linear, fuel))
  in
  window2("zls_" ^ scenario, 8., t, s1, s2)

let hybrid basicfuel () =
  let rec init sensors = Fuelc.sensors_baseline ()
  and (t, air_fuel_ratio, speed, map, ego, throttle, fuel) =
    simulation (sensors) in
  present (init) | (period (0.01)) ->
    dump(t, "basicfuel",
            air_fuel_ratio,
            speed,
            map,
            ego,
            throttle,
            fuel)
  else ()

let hybrid mapfail () =
  let
  rec init sensors = Fuelc.sensors_baseline ()
  and (t, air_fuel_ratio, speed, map, ego, throttle, fuel) =
    simulation (sensors)
  and present (period (0.01)) -> do sensors = Fuelc.sensors_mapfail () done
  in
  present (init) | (period (0.01)) ->
      dump(t, "mapfail",
              air_fuel_ratio,
              speed,
              map,
              ego,
              throttle,
              fuel)
  else ()
