let node sim () =
	let rec ((x, y):{(v:float) * (w:float) | w >= 0.}) = (1., 1.) fby 
       (let va=5.0 in 
         (let vb=(va+.7.) in
           (let vc=(vb*.3.) in 
            (-.x, (if (x < 0.) then -.x else vc*.x))))) in (x, y)
	

	(*let (x:{v:float | v >= 0}) =  5. in x*)
	(*let rec (x:{v:float | v > 0.}) = (-5.) in x*)
	(*let rec ((x, y):{v:(int*int) | true}) = (5, 7) in (x, y);; (* this type checks *)*)
