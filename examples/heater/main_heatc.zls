open Constants
open Heatc
  
(* The simplest version; the temp is fixed and equals 19 *)
let hybrid main_no_graphics() =
  let der t = 1.0 init 0.0 in
  let u, temp = system(19.0) in
  present (period(0.1)) | (disc(u)) ->
    (print_string "time = "; print_float t;
     print_string "  ";
     print_string "command = ";
     print_string (if u then "true" else "false");
     print_string "  ";
     print_string "temp = "; print_float temp;
     print_newline())
  else ()

      
(* One that run the continuous and discrete model in parallel *)
let hybrid main() =
  let p_h = period(h) in
  (* input *)
  let reference_temp = present p_h -> Io.input () init 19.0 in
  let der time = 1.0 init 0.0 in
  (* the system in continuous-time *)
  let (u, measured_temp) = Heatc.system(reference_temp) in
  (* the system in discrete-time *)
  let u_discrete, measured_temp_discrete =
    present p_h -> Heat.system(reference_temp) init (false, 0.0) in  
  (* output *)
  present p_h | (disc(u)) ->
    Io.output_long
      (u, reference_temp, measured_temp,
       u_discrete, measured_temp_discrete, time)
  else ()
