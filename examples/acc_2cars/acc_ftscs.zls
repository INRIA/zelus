let vfi:{v: float | v > 0.} = 0.8
let dt:{v: float | v > 0.} = 0.1 
let b:{v: float | v > 0.} = 0.136
let xl:{v: float | v > 0.} = 5.

let node exec () =
  let rec ((df, vf, af):
    {(d:float)*(v:float)*(a:float) | (d > 0.) &&
        (d -. ((v*.v)  /. (2.0*.b)) -. (v*.dt /. 2.) > 0) && (v >= 0.) &&
        ((((d -. ((v*.v) /. (2.0*.b)) -. (v*.dt) -. (v*.dt /. 2.)) > 0) && (a <= 0.)) ||
         (((d -. ((v*.v) /. (2.0*.b)) -. (v*.dt) -. (v*.dt /. 2.)) <= 0) && (a = -. b)))
    }) = (xl, vfi, 0.) fby
      (let v_next = ((if (vf +. (af *. dt) < 0.) then 0. else vf +. (af *. dt)) 
                     models (robot_get ("vel"))) in
        (let d_next = ((df -. (v_next *. dt)) 
                       models (robot_get ("dist"))) in
          (d_next, v_next,
           (if (d_next -. ((v_next *. v_next) /. (2.0*.b)) -. 
             (v_next *. dt) -. (v_next *. dt /. 2.)) <= 0.5 
               then (-.b) else 0.))))
    in (robot_str ("brake", af)); (df, vf, af)

