let vfi:{v: float | v > 0.} = 0.8
let dt:{v: float | v > 0.} = 0.1
let b:{v: float | v > 0.} = 0.136
let xl:{v: float | v > 0.} = 5.

let node exec () = 
  let rec ((df, vf, af): 
    {(d:float)*(v:float)*(a:float) | box((d -. ((v*. v)  /. (2.0*.b))  > 0.) &&
        (d > 0.) && (v >= 0.) &&
		((((d -. ((v *. v) /. (2.0*.b)) -. (v *. dt) -. (v *. dt /. 2.)) > 0.) && (a <= 0.)) (* used to be a <= 0*) ||
		 (((d -. ((v *. v) /. (2.0*.b)) -. (v *. dt) -. (v *. dt /. 2.)) <= 0.) && (a = -. b))))
    }) = 
    (xl, vfi, 0.) fby 
        (let v_next = ((if (vf +. (af *. dt) < 0.) then 0. else vf +. (af *. dt)) models (robot_get ("vel"))) in
            (let d_next = (df -. (v_next *. dt)) in
    ((d_next,
     v_next,
     (if (d_next -. ((v_next *. v_next) /. (2.0*.b)) -. (v_next *. dt) -. (v_next *. dt /. 2.)) <= 0. then (-.b) else 0.))
    ))
    in (df, vf, af)
	
let hybrid main () = 
	let rec trigger = (period (dt)) in
	present (trigger) -> (let (x, v, a) = exec () in (print_float x; print_newline ())) else ()
