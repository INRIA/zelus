(* Deux exemples d'integrales donnees par Guillaume Melquion *)
(* pendant son cours aux JFLA'19 - 2/02/2019 *)

(* la premier utilise [abs_float] qui est C^0 mais pas C^1 *)
let hybrid f1 (x) = o where
  rec der o = abs_float
                (x ** 4.0 +. 10.0 *. x ** 3.0 +.
		   19.0 *. x ** 2.0 -. 6.0 *. x -. 6.0) *. exp(x) init 0.0

(* la meme en indiquant qu'il faut detecter les instants *)
(* ou la derivee de la valeur absolule n'est pas definie *)
let hybrid f1_with_abs_detection (x) = o where
  rec v = (x ** 4.0 +. 10.0 *. x ** 3.0 +.
		   19.0 *. x ** 2.0 -. 6.0 *. x -. 6.0) *. exp(x)
  and der o = abs_float v init 0.0
  and z = present up(v) | up(-. v) -> ()

(* une autre ultra raide, a integrer entre t = 0 et t = 8 *)
let hybrid f2 (t) = o where
  rec der o = sin (t +. exp t) init 0.0

(* calculer f(t) jusqu'a t = max; [t] est le temps *)
let hybrid upto(f)(max)(t) = o where
  rec automaton
      | Int -> do o = run f t until up(t -. max) then Stop
      | Stop -> do done

let hybrid main_f(f)(max)() =
  let der t = 1.0 init 0.0 in
  let o = upto(f)(max)(t) in
  present (period (0.0 | 0.1)) ->
    let s = Scope.scope2 (-1.0, 40.0, ("o", Scope.linear, o),
			  ("_", Scope.linear, 0.0)) in
    Scope.window ("f", 14.0, t, s)
  else ()  

(* main1 integre f1 entre t = 0 et 1.0 *)
let hybrid main1() = main_f(f1)(1.0)() (* 11.14835 *)
let hybrid main1_1() = main_f(f1_with_abs_detection)(1.0)() (* 11.14858 *)

(* la reponse attendue pour o, a t = 8.0 est approximativement 0.3474 *)
(* Sundials s'en tire pas mal ! *)
let hybrid main2() = main_f(f2)(8.0)()

let hybrid main () = main1 ()
