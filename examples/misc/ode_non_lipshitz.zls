(* One classical example of a continuous but non lipshitz function *)
(* The ODE has two solutions *)
(* f(y) = y^(1/3) and y' = f(y) init 0 *)
(* has two solutions: y(t) = 0 and y(t) = c * t^(3/2) with *)
(* c = sqrt(2/3) *)

(* La solution calculee par Sundials est y(t) = 0 *)

open Node

let f(y) = y ** (1.0 /. 3.0)

let hybrid ff () =
  let rec der y = f(y) init 0.0 in
  y

let c = sqrt(2.0 /. 3.0)
    
let sol(t) = c *. t ** (3.0 /. 2.0)

let h = 0.01
    
let node main() =
  let rec { time = time; result = o } = Node.solve ff 10.0 (next_horizon, ())
  and next_horizon =
    h fby (if time >= next_horizon then next_horizon +. h else next_horizon) in
  let r = sol(time) in
  print_string "time = "; print_float time;
  print_string " o = "; print_float o;
  print_string " r = "; print_float r;
  print_newline ()
