let vfi:{v: float | v > 0.} = 0.8
let dt:{v: float | v > 0.} = 0.01
let b:{v: float | v > 0.} = 0.136
let xl:{v: float | v > 0.} = 5.


let node exec () = 
  let rec ((xf, vf, af): 
    {(x:float)*(v:float)*(a:float) | (x +. ((v*. v)  /. (2.0*.b)) < xl) && (a = -0.136)   
    }) = 
    (0., vfi, -0.136) fby
    (xf +. (vf *. dt),
     vf +. (af *. dt),
     -0.136
     (*(if (xf +. ((vf *. vf) /. (2.0*.b)) +. (vf *. 3. *. dt)) >= xl then (-.b) else 0.)*))
    in (xf, vf, af)
	
let hybrid main () = 
	let rec trigger = (period (0.01)) in
	present (trigger) -> (let (x, v, a) = exec () in (print_float x; print_newline ())) else ()
