(* 
  This example is taken from:  S. Malik "Analysis of cyclic combinational circuits" 1994 
  It is the prototypical example of a cyclic circuit that is constructively causal but not causal in the Scade/Lustre/Zelus sense. 
*)
let node mux(c, x, y) returns (o)
  if c then o = x else o = y

let node f(x) returns (o) o = 2 * x
let node g(x) returns (o) o = x - 1
    
let node fog_gof(c, x) returns (y)
  local x1, x2, y1, y2
  do x1 = mux(c, x, y2)
  and x2 = mux(c, y1, x)
  and y1 = f(x1)
  and y2 = g(x2)
  and y = mux(c, y2, y1)
  done

(* Same output with no cycle for reference *)
let node fog_gof_ref(c, x) returns (y)
  y = mux(c, g(f(x)), f(g(x)))
     
(* Compare the outputs of the two versions *)
let node main() returns (ok)
  local y1, y2, c, x
  do  y1 = fog_gof(c, x)
  and y2 = fog_gof_ref(c, x)
  and c = random_bool ()
  and x = 0 -> pre x + 1
  and ok = (y1 = y2)
  done

