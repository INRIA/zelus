(* 
  This example is taken from:  S. Malik "Analysis of cyclic combinational 
  circuits" 1994 
  It is the prototypical example of a cyclic circuit that is constructively 
  causal but not causal in the Scade/Lustre/Zelus sense. 
*)

let node mux(c, x, y) returns (o)
  if c then o = x else o = y

let node f(x) returns (o) o = 2 * x
let node g(x) returns (o) o = x - 1
    
let node constructive1(c, x) returns (y)
  local x1, x2, y1, y2
  do x1 = run mux (c, x, y2)
  and x2 = run mux (c, y1, x)
  and y1 = run f(x1)
  and y2 = run g(x2)
  and y = run mux (c, y2, y1)
  done

 let node constructive2(c, x) returns (y)
  y = run mux (c, run g(run f(x)), run f(run g(x)))

let node main() returns (ok)
  local c, x, y1, y2
  do  y1 = run constructive1(c, x)
  and y2 = run constructive2(c, x)
  and c = true fby true fby not c
  and x = 0 -> pre x + 1
  and ok = (y1 = y2)
  done

