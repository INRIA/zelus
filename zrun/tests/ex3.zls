(* test of init arguments *)
let node f(r init 0) returns (m)
  do m = last r
  done

let node f_same(r) returns (m)
  local r_i init 0
  do m = last r_i
  and r_i = r done

let node f_same2(r) returns (m)
  local r_i, last_r_i
  do last_r_i = 0 fby r_i
  and m = last_r_i
  and r_i = r done

let node main_f() returns (o)
  local r, m1, m2, m3
  do r = 0 -> pre r + 1
  and m1 = run f(r)
  and m2 = run f_same(r)
  and m3 = run f_same2(r)
  and o = (m1 = m2) && (m2 = m3)
  done

let node f1(r init 0) returns (m init 0)
  local s init r
  do s = last s + last r
  and m = s + (0 -> last m)
  done

let node f1_same(r) returns (m)
  local s init r, r_i init 0, m_i init 0
  do s = last s + last r_i
  and m = s + (0 -> last m_i)
  and m_i = m
  and r_i = r done

let node main_f1() returns (o)
  local r, m1, m2 
  do r = 0 -> pre r + 1
  and m1 = run f1(r) and (m2) = run f1_same(r)
  and o = (m1 = m2)
  done

let node f1_same2(r) returns (m)
  local s, last_s, r_i, last_r_i, m_i, last_m_i
  do s = last_s + last_r_i
  and m = s + (0 -> last_m_i)
  and last_s = r fby s
  and last_r_i = 0 fby r_i
  and last_m_i = 0 fby m_i
  and m_i = m
  and r_i = r done

let node main_f1_same2() returns (o)
  local r, o1, o2 
  do r = 0 -> pre r + 1
  and o1 = run f1(r) and o2 = run f1_same2(r)
  and o = (o1 = o2)
  done

let node f1_same3(r) returns (m)
  local s, last_s, r_i, last_r_i, m_i, last_m_i, i
  do s = last_s + last_r_i
  and m = s + if i then 0 else last_m_i
  and i = true fby false
  and last_s = r fby s
  and last_r_i = 0 fby r_i
  and last_m_i = 0 fby m_i
  and m_i = m
  and r_i = r done

let node main_f1_same3() returns (o)
  local r, o1, o2
  do r = 0 -> pre r + 1
  and o1 = run f1(r) and o2 = run f1_same3(r)
  and o = (o1 = o2)
  done

let node main() returns (o)
  do o = run main_f () &&
    run main_f1 () &&
    run main_f1_same2 () &&
    run main_f1_same3 ()
  done
